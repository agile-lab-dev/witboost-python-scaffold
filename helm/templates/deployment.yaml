apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "pythonsp.name" . }}
{{- include "pythonsp.labels" . | nindent 4 }}
  name: {{ template "pythonsp.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "pythonsp.name" . }}
  template:
    metadata:
      annotations:
      labels:
        app: {{ template "pythonsp.name" . }}
{{- include "pythonsp.labels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      {{- if .Values.dockerRegistrySecretName }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecretName }}
      {{- end}}
      volumes:
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.registry }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 5002
              protocol: TCP
          {{- if .Values.securityContext }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe: {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe: {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          volumeMounts:
